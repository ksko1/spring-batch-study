<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ksko.spring_batch.batch_sample.jobs"> <!-- 해당 namespace 때문에 java 파일 내 경로 설정 편리 -->

    <resultMap id="customerResult" type="com.ksko.spring_batch.batch_sample.jobs.models.Customer">
        <!-- type="com.ksko.spring_batch.batch_sample.jobs.models.Customer"는 결과를 매핑할 Java 클래스
             쿼리 결과의 id, name, age, gender 컬럼 값을 customer 객체의 해당 동일명 속성에 매핑 -->
        <result property="id" column="id"></result>
        <result property="name" column="name"></result>
        <result property="age" column="age"></result>
        <result property="gender" column="gender"></result>
    </resultMap>

    <select id="selectCustomers" resultMap="customerResult">
        SELECT ID
             , NAME
             , AGE
             , GENDER
          FROM CUSTOMER
         LIMIT #{_skiprows}, #{_pagesize}
        <!-- #{_skiprows}: MyBatis가 제공하는 매개변수로, 건너뛸 행(row)의 수를 지정
             #{_pagesize}: 한 페이지에 가져올 행(row)의 수를 지정합니다.  -->
    </select>

    <insert id="insertCustomers" parameterType="com.ksko.spring_batch.batch_sample.jobs.models.Customer">
        INSERT
          INTO CUSTOMER (NAME, AGE, GENDER, GRADE)
        VALUES (
               #{name}
             , #{age}
             , #{gender}
             , #{grade}
        )
    </insert>

</mapper>