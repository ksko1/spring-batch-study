plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.ksko.spring-batch'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}

	//241112 로컬내 jdk 버전 차이이슈로 미실행되는 현상 수정
	sourceCompatibility = '21'  // JDK 21로 설정
	targetCompatibility = '21'

}



repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	//h2 db console connect
	//implementation 'org.springframework.boot:spring-boot-starter-web'
	//h2 db
	//implementation 'com.h2database:h2:2.2.224' //h2
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
 	//mysql db
	runtimeOnly 'com.mysql:mysql-connector-j'
	//Class com.sun.tools.javac.tree.JCTree$JCImport does not have member field 'com.sun.tools.javac.tree.JCTree qualid' 오류 해결 위한 롬복 버전 1.18.30 이상으로 업데이트
	implementation 'org.projectlombok:lombok:1.18.30' //241118,ksko lombok 호환성 버그 이슈 버전 수정 1.18.24 --> 1.18.30
	annotationProcessor 'org.projectlombok:lombok:1.18.30' //lombok
	//mybatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	implementation 'org.mybatis:mybatis:3.5.16'        // 3.5.13 --> 3.5.16
	implementation 'org.mybatis:mybatis-spring:3.0.3'  // 2.1.0 --> 3.0.3
	//querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
}

// https://g-db.tistory.com/entry/Spring-Boot-Spring-Boot%EC%97%90%EC%84%9C-JPA-QueryDSL-%EC%A0%81%EC%9A%A9-%EB%B0%A9%EB%B2%95#Gradle%EC%97%90%20QueryDSL%20%EC%9D%98%EC%A1%B4%EC%84%B1%20%EC%B6%94%EA%B0%80-1
// helped by sajacaros
// Querydsl 빌드 옵션 설정
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}



tasks.named('test') {
	useJUnitPlatform()
}


